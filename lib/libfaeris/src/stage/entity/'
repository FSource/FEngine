#include "FsLabelBitmap.h"


NS_FS_BEGIN

LabelBitmap* LabelBitmap::create()
{
	LabelBitmap* ret=new LabelBitmap();
	if(!ret->init())
	{
		delete ret;
		ret=NULL;
	}

	return ret;
}

LabelBitmap* LabelBitmap::create(const char* font)
{
	LabelBitmap* ret=new LabelBitmap();
	if(!ret->init(font,1.0f))
	{
		delete ret;
		ret=NULL;
	}

	return ret;
}

LabelBitmap* LabelBitmap::create(const char* font,const char* text)
{
	LabelBitmap* ret=new LabelBitmap();
	if(!ret->init(font,1.0f,text))
	{
		delete ret;
		ret=NULL;
	}
	return ret;
}

LabelBitmap* LabelBitmap::create(const char* font,float size,const char* text)
{
	LabelBitmap* ret=new LabelBitmap();
	if(!ret->init(font,1.0f,text))
	{
		delete ret;
		ret=NULL;
	}

	return ret;
}


void LabelBitmap::setString(const char* str)
{
	FS_TRACE_WARN_ON(str==NULL,"NULL String");
	if(m_text==str)
	{
		return;
	}

	m_text=std::string(str);
	FS_SAFE_DELETES(m_utf16text);
	m_utf16text=FsIconv_UTF8_to_UNICODE(str);
	m_dirty=true;
}

const char* LabelBitmap::getString()
{
	return m_text.c_str();
}

void LabelBitmap::setFontName(const char* font_name)
{
	if(m_fontName==font_name)
	{
		return;
	}

	m_fontName=font_name;

	FontBitmap*  font=(FontBitmap*)Global::fontBitmapMgr()->load(font_name);

	FS_TRACE_WARN_ON(font==NULL,"Load FontName %s Failed",font_name);

	FS_SAFE_ASSIGN(m_font,font);
	m_dirty=true;
}


const char* LabelBitmap::getFontName()
{
	return m_fontName.c_str();
}

void LabelBitmap::setFontSize(float size)
{
	if(m_fontSize==size)
	{
		return;
	}

	m_fontSize=size;
	m_dirty=true;
}

float LabelBitmap::getFontSize()
{
	return m_fontSize;
}

void LabelBitmap::setTextAlign(E_TextAlign align)
{
	if(m_textAlign == align)
	{
		return ;
	}
	m_textAlign=align;

	if(!m_dirty)
	{
		m_typoPage.setTextAlign(align);
	}
}

E_TextAlign LabelBitmap::getTextAlign()
{
	return m_textAlign;
}



























NS_FS_END



