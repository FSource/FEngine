$#include "stage/entity/FsQuad2D.h"

class Quad2D:public Entity2D
{
	public:
		static Quad2D* __Entity2D__create@create(const Color4f& c,float width,float height);
		static Quad2D* __Entity2D__create@create(const Color4f& c,const Rect2D& rect);

		static Quad2D* __Entity2D__create@create(Color c,float width,float height);
		static Quad2D* __Entity2D__create@create(Color c,const Rect2D& rect);

		static Quad2D* __Entity2D__create@create();
		static Quad2D* __Entity2D__create@create(const char* tex);
		static Quad2D* __Entity2D__create@create(const char* tex,const Rect2D& rect);
		static Quad2D* __Entity2D__create@create(const char* tex,float width,float height);

	public:

		/* texture */
		void setTexture(const char* tex);
		void setResourceUrl(const char* name);


		void setTexture(Texture2D* tex);
		Texture2D* getTexture();

		/* Rect2D */
		void setRect2D(const Rect2D& rect);
		Rect2D getRect2D();


	public:
		void setRegionRect(float x,float y,float w,float h);
		void setRegionRect(const Rect2D& rect);

		void setRegionCircle(float x,float y,float radius,int precision);
		void setRegionCircle(const Vector2& center,float radius,int precision);
		void setRegionCircle(float x,float y,float radius,
				float start_angle,float end_angle,
				int precision);
		void setRegionCircle(const Vector2& center,float radius,
				float start_angle,float end_angle,
				int precision);


		void setRegionEllipse(float x,float y,float a,float b,int precision);
		void setRegionEllipse(const Vector2& center,float a,float b,int precision);

		void setRegionEllipse(float x,float y,float a,float b,
				float start_angle,float end_angle,
				int precision);
		void setRegionEllipse(const Vector2& center,float a,float b,
				float start_angle,float end_angle,
				int precision);


		/* When Texture Size Change, You Should ReCall setRegionScale9 to Correct Region*/
		void setRegionScale9(float edge);
		void setRegionScale9(const Vector4& edge);
		void setRegionScale9(float l,float r,float b,float t);

};


