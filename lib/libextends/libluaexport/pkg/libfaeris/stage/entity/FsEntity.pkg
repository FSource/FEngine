$#include "stage/entity/FsEntity.h"
$#include "luaext/FsLuaEntity.h"

class Entity@__Entity:public ActionTarget
{
	public:
		Vector3 localToWorld(const Vector3& v);
		Vector3 worldToLocal(const Vector3& v);

		/* relation ship*/
		void addChild(Entity* n);
		Entity* getParent();

		void remove(Entity* n);
		void detach();
		void clearChild();

		FsArray* takeAllChild(bool visible);
		int childNu();

		Layer* getLayer();
		Scene* getScene();

		Matrix4* getLocalMatrix();
		Matrix4* getWorldMatrix();

		bool updateWorldMatrix();
		void updateAllWorldMatrix();

	public: /* get transform info */
		Vector3 getPosition();
		void getPosition(float* x=0, float* y=0,float* z=0);
		float getPositionX();
		float getPositionY();
		float getPositionZ();

		/* scale information */
		Vector3 getScale();
		float getScaleX();
		float getScaleY();
		float getScaleZ();

		/* rotate information */
		Vector3 getRotate();
		float getRotateX();
		float getRotateY();
		float getRotateZ();


	public: /* transform */
		void rotate(float rx,float ry,float rz);
		void rotateX(float r);
		void rotateY(float r);
		void rotateZ(float r);

		void scale(float sx,float sy,float sz);
		void scaleX(float s);
		void scaleY(float s);
		void scaleZ(float s);

		void move(float tx,float ty,float tz);
		void moveX(float t);
		void moveY(float t);
		void moveZ(float t);

	public:/* set transform */
		void setRotate(float rx,float ry,float rz);
		void setRotateX(float r);
		void setRotateY(float r);
		void setRotateZ(float r);

		void setScale(float sx,float sy,float sz);
		void setScaleX(float s);
		void setScaleY(float s);
		void setScaleZ(float s);

		void setPosition(float tx,float ty,float z=0);
		void setPositionX(float t);
		void setPositionY(float t);
		void setPositionZ(float t);

		/*
		void setPositionInWorld(float tx,float ty,float tz);
		void setPositionXInWorld(float t);
		void setPositionYInWorld(float t);
		void setPositionZInWorld(float t);
		*/
		Vector3 getPositionInWorld();
		void getPositionInWorld(float* x=0,float* y=0,float* z=0);

		void setTransform(ITransform* );
		ITransform* getTransform();


	public:
		float getZorder();
		void setZorder(float z);

	public:
		void setVisible(bool visible);
		void setChildVisible(bool visiable,bool rec);
		bool getVisible@visible();
		bool getVisible();
		void setVisibles(bool visible);
		bool getVisibles();


		void setDispatchTouchEnabled(bool enabled);
		bool getDispatchTouchEnabled();
		void setDispatchTouchesEnabled(bool enabled);
		bool getDispatchTouchesEnabled();


		bool hit2D(float x,float y);
		void draw(RenderDevice* render,bool update_matrix=true);
		void draws(RenderDevice* render,bool update_matrix=true);

		void update(float dt);
		void updates(float dt);


		/* single touch */
		void setTouchEnabled(bool enabled);
		bool getTouchEnabled();

		virtual bool touchBegin(float x,float y);
		virtual bool touchMove(float x,float y);
		virtual bool touchEnd(float x,float y);

		/* multi touches */
		void setTouchesEnabled(bool enabled);
		bool getTouchesEnabled();

};

class LuaEntity@Entity:public Entity 
{
	public:
		static LuaEntity* create();
	public:
		void onUpdate@update(float dt);
		void onDraw@draw(RenderDevice* r);
		bool onTouchBegin@touchBegin(float x,float y);
		bool onTouchMove@touchMove(float x,float y);
		bool onTouchEnd@touchEnd(float x,float y);
		bool onHit2D@hit2D(float x,float y);
};



