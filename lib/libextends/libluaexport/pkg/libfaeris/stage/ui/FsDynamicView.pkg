$#include "stage/ui/FsDynamicView.h"



class DynamicView:public UiWidget
{
	public:
		enum 
		{
			ALIGN_TOP,
			ALIGN_CENTER,
			ALIGN_BOTTOM,
			ALIGN_LEFT,
			ALIGN_RIGHT,
		};


	public:
		static DynamicView* create(float width,float height);

	public:
		void setMargin(float l,float r,float t,float b);
		void getMargin(float* l,float* r,float* t,float* b) const;

		void setMarginLeft(float v);
		float getMarginLeft() const;

		void setMarginRight(float r);
		float getMarginRight() const;

		void setMarginTop(float t);
		float getMarginTop() const;

		void setMarginBottom(float b);
		float getMarginBottom() const;


	public:
		void addView(const char* name,UiWidget* view);
		void addView(const char* name,UiWidget* view,int alignh,int alignv);

		void removeView(const char* name);
		void removeView(UiWidget* view);

		UiWidget* getCurrentView();
		const char* getCurrentViewName();

		void setCurrentView(const char* name);
		void setCurrentView(UiWidget* view);

		void setViewAlign(UiWidget* view,int alignh,int alignv);
		void setCurrentViewAlign(int alignh,int alignv);

	public:
		virtual const char* className();

		virtual void sizeChanged(float w,float h);
		virtual void anchorChanged(float x,float y);

		virtual void childSizeChanged(UiWidget* widget,float w,float h);
		virtual void childAnchorChanged(UiWidget* widget,float x,float y);

		virtual void layout();
		virtual void removeWidget(UiWidget* widget);



	public:
		virtual void currentViewChanged(UiWidget* old_view,UiWidget* new_view);
};
